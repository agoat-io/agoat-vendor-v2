-- Migration: 013_align_with_real_database.sql
-- Description: Align migration files with the real database schema that the API is using
-- Date: 2025-10-04
-- Author: AGoat Publisher Team
--
-- This migration documents the actual database evolution that has occurred
-- outside of the tracked migration system. The API is working with a database
-- that has evolved beyond what the migration files represent.
--
-- This migration serves to:
-- 1. Document the real database state
-- 2. Ensure migration files match reality
-- 3. Provide a baseline for future migrations

-- =============================================================================
-- REAL DATABASE STATE DOCUMENTATION
-- =============================================================================
-- The real database has these characteristics:
--
-- 1. USERS TABLE: Uses BIGINT with unique_rowid() (CockroachDB sequential IDs)
--    - Has both legacy fields (password_hash, azure_*) and modern OIDC fields
--    - Supports multi-tenancy with customer_id and site_id
--    - Has comprehensive authentication tracking
--
-- 2. POSTS TABLE: Uses BIGINT with unique_rowid() (CockroachDB sequential IDs)
--    - Has multi-tenant support with site_id
--    - Supports soft delete with deleted_at
--    - Has status field for content management
--
-- 3. MULTI-TENANT TABLES: customers and sites tables exist
--    - Support for multi-tenant architecture
--    - Proper foreign key relationships
--
-- 4. CIAM SUPPORT: ciam_systems and user_ciam_mappings tables exist
--    - Full OIDC/OAuth2 support
--    - Multiple authentication providers
--
-- 5. MIGRATION TRACKING: migration_status table exists
--    - Tracks applied migrations
--    - Version control for schema changes

-- =============================================================================
-- KEY DIFFERENCES FROM MIGRATION FILES
-- =============================================================================
-- The real database differs from migration files in these ways:
--
-- 1. PRIMARY KEYS: Uses BIGINT with unique_rowid() instead of UUID
--    - This is actually better for CockroachDB performance
--    - Avoids UUID generation overhead
--
-- 2. FIELD EVOLUTION: Users table has evolved to include:
--    - Legacy authentication fields (password_hash, azure_*)
--    - Modern OIDC fields (oidc_sub, oidc_issuer, etc.)
--    - Multi-tenant fields (customer_id, site_id)
--    - Comprehensive tracking fields
--
-- 3. MULTI-TENANCY: Full multi-tenant support exists
--    - customers and sites tables
--    - Proper tenant isolation
--    - Site-specific content management
--
-- 4. CIAM INTEGRATION: Complete CIAM system exists
--    - Multiple authentication providers
--    - OIDC/OAuth2 compliance
--    - User mapping system

-- =============================================================================
-- RECOMMENDATION
-- =============================================================================
-- Since the API is working successfully with the current database:
--
-- 1. ACCEPT REALITY: The real database schema is the source of truth
-- 2. UPDATE DOCUMENTATION: Migration files should reflect reality
-- 3. CONTINUE EVOLUTION: Future changes should be properly migrated
-- 4. MAINTAIN COMPATIBILITY: Ensure API continues to work

-- =============================================================================
-- SCHEMA VERSION TRACKING
-- =============================================================================

-- Insert record for this migration
INSERT INTO migration_status (version, name, checksum, status, description)
VALUES (13, 'align_with_real_database', 'align_with_real_database_v1_0', 'success', 'Align migration files with real database schema')
ON CONFLICT (version) DO NOTHING;
