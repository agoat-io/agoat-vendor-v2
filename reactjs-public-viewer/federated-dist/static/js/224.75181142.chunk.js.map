{"version":3,"file":"static/js/224.75181142.chunk.js","mappings":"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","sources":["components/PostsList.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { marked } from 'marked'\nimport DOMPurify from 'dompurify'\n\ninterface Post {\n  id: string\n  title: string\n  content: string\n  slug: string\n  published: boolean\n  created_at: string\n  updated_at: string\n  user_id: string\n  author?: string\n}\n\ninterface PostsListProps {\n  apiUrl?: string\n  showPublishedOnly?: boolean\n  page?: number\n  limit?: number\n  isAuthenticated?: boolean\n  maxContentLength?: number\n  onPostClicked?: (post: Post) => void\n  onPostsLoaded?: (posts: Post[]) => void\n  onError?: (error: string) => void\n}\n\nconst PostsList: React.FC<PostsListProps> = ({\n  apiUrl = 'http://localhost:8080/api',\n  showPublishedOnly = true,\n  page = 1,\n  limit = 10,\n  isAuthenticated = false,\n  maxContentLength = 300,\n  onPostClicked,\n  onPostsLoaded,\n  onError\n}) => {\n  const [posts, setPosts] = useState<Post[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [currentPage, setCurrentPage] = useState(page)\n  const [totalPages, setTotalPages] = useState(1)\n  const [, setTotalPosts] = useState(0)\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString)\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })\n  }\n\n  const getPreviewText = (content: string) => {\n    let text = content\n    \n    // For non-authenticated users, truncate content\n    if (!isAuthenticated && text.length > maxContentLength) {\n      text = text.substring(0, maxContentLength) + '...'\n    }\n    \n    // Convert markdown to HTML for preview\n    return DOMPurify.sanitize(marked.parse(text) as string)\n  }\n\n  const fetchPosts = useCallback(async () => {\n    console.log('PostsList: Fetching posts with params:', {\n      apiUrl,\n      page: currentPage,\n      limit,\n      showPublishedOnly: showPublishedOnly || !isAuthenticated\n    })\n    \n    setLoading(true)\n    setError(null)\n    \n    try {\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        limit: limit.toString()\n      })\n      \n      if (showPublishedOnly || !isAuthenticated) {\n        params.append('published', 'true')\n      }\n      \n      const url = `${apiUrl}/posts?${params}`\n      console.log('PostsList: Making request to:', url)\n      const response = await axios.get(url)\n      \n      if (response.data && response.data.data) {\n        setPosts(response.data.data)\n        setTotalPosts(response.data.meta?.total || response.data.data.length)\n        setTotalPages(response.data.meta?.total_pages || Math.ceil(response.data.data.length / limit))\n        \n        console.log('PostsList: Loaded posts:', response.data.data.length)\n        onPostsLoaded?.(response.data.data)\n      } else {\n        setPosts([])\n      }\n    } catch (err: any) {\n      const errorMessage = err.response?.data?.message || err.message || 'Failed to load posts'\n      setError(errorMessage)\n      onError?.(errorMessage)\n    } finally {\n      setLoading(false)\n    }\n  }, [apiUrl, currentPage, limit, showPublishedOnly, isAuthenticated, onPostsLoaded, onError])\n\n  const changePage = (newPage: number) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage)\n    }\n  }\n\n  const handlePostClick = (post: Post) => {\n    // Create URL with query string parameter\n    const postPath = `${post.slug}/${post.id}`\n    const currentUrl = new URL(window.location.href)\n    currentUrl.searchParams.set('post-path', postPath)\n    \n    // Update URL without page reload\n    window.history.pushState({}, '', currentUrl.toString())\n    \n    // Emit the post click event\n    onPostClicked?.(post)\n  }\n\n  useEffect(() => {\n    fetchPosts()\n  }, [fetchPosts])\n\n  useEffect(() => {\n    setCurrentPage(page)\n  }, [page])\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-3 text-gray-600\">Loading posts...</span>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n        <div className=\"flex\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm text-red-800\">{error}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (posts.length === 0) {\n    return (\n      <div className=\"text-center py-8 sm:py-12\">\n        <svg className=\"mx-auto h-10 w-10 sm:h-12 sm:w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n        </svg>\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No posts found</h3>\n        <p className=\"mt-1 text-xs sm:text-sm text-gray-500\">There are no posts available at the moment.</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"viewer-container\">\n      {/* Posts list with SEO optimization */}\n      <div className=\"posts-list\">\n        <div className=\"mb-6 sm:mb-8\">\n          <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-2\">Latest Posts</h1>\n          <p className=\"text-sm sm:text-base text-gray-600\">Discover our latest articles and insights</p>\n        </div>\n\n        <div className=\"grid gap-4 sm:gap-6 lg:gap-8\">\n          {posts.map(post => (\n            <article \n              key={post.id}\n              className=\"post-card bg-white border border-gray-200 rounded-lg p-4 sm:p-6 hover:shadow-md transition-shadow\"\n              itemScope\n              itemType=\"https://schema.org/BlogPosting\"\n            >\n              <div className=\"mb-3 sm:mb-4\">\n                <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900 mb-2 leading-tight\" itemProp=\"headline\">\n                  <button \n                    onClick={() => handlePostClick(post)}\n                    className=\"hover:text-blue-600 transition-colors text-left w-full\"\n                  >\n                    {post.title}\n                  </button>\n                </h2>\n                <div className=\"flex flex-col sm:flex-row sm:items-center text-xs sm:text-sm text-gray-500 space-y-1 sm:space-y-0 sm:space-x-4\">\n                  <span itemProp=\"author\">By {post.author || 'Admin'}</span>\n                  <time dateTime={post.created_at} itemProp=\"datePublished\">Published {formatDate(post.created_at)}</time>\n                  {post.updated_at && post.updated_at !== post.created_at && (\n                    <time dateTime={post.updated_at} itemProp=\"dateModified\" className=\"hidden sm:inline\">\n                      • Updated {formatDate(post.updated_at)}\n                    </time>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"post-preview mb-3 sm:mb-4\" itemProp=\"description\">\n                <div \n                  className=\"text-sm sm:text-base text-gray-700 leading-relaxed\" \n                  dangerouslySetInnerHTML={{ __html: getPreviewText(post.content) }}\n                />\n              </div>\n\n              <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center space-y-2 sm:space-y-0\">\n                <button \n                  onClick={() => handlePostClick(post)}\n                  className=\"text-blue-600 hover:text-blue-800 font-medium text-sm sm:text-base text-left\"\n                >\n                  {isAuthenticated ? 'Read full article' : 'Read more'}\n                </button>\n                \n                {!isAuthenticated && post.content.length > maxContentLength && (\n                  <div className=\"text-xs sm:text-sm text-gray-500\">\n                    {Math.ceil(post.content.length / 100)} min read\n                  </div>\n                )}\n              </div>\n            </article>\n          ))}\n        </div>\n\n        {/* Pagination with SEO-friendly URLs */}\n        {totalPages > 1 && (\n          <div className=\"mt-6 sm:mt-8 flex justify-center\">\n            <nav className=\"flex items-center space-x-1 sm:space-x-2\" role=\"navigation\" aria-label=\"Pagination\">\n              {currentPage > 1 && (\n                <a \n                  href={`?page=${currentPage - 1}`}\n                  onClick={(e) => {\n                    e.preventDefault()\n                    changePage(currentPage - 1)\n                  }}\n                  className=\"px-2 sm:px-3 py-2 text-xs sm:text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n                  rel=\"prev\"\n                >\n                  Previous\n                </a>\n              )}\n              \n              <span className=\"px-2 sm:px-3 py-2 text-xs sm:text-sm text-gray-700\">\n                Page {currentPage} of {totalPages}\n              </span>\n              \n              {currentPage < totalPages && (\n                <a \n                  href={`?page=${currentPage + 1}`}\n                  onClick={(e) => {\n                    e.preventDefault()\n                    changePage(currentPage + 1)\n                  }}\n                  className=\"px-2 sm:px-3 py-2 text-xs sm:text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n                  rel=\"next\"\n                >\n                  Next\n                </a>\n              )}\n            </nav>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default PostsList\n\n"],"names":["_ref","apiUrl","showPublishedOnly","page","limit","isAuthenticated","maxContentLength","onPostClicked","onPostsLoaded","onError","posts","setPosts","useState","loading","setLoading","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","setTotalPosts","formatDate","dateString","Date","toLocaleDateString","year","month","day","getPreviewText","content","text","length","substring","DOMPurify","sanitize","marked","parse","fetchPosts","useCallback","async","console","log","params","URLSearchParams","toString","append","url","concat","response","axios","_response$data$meta","_response$data$meta2","data","meta","total","total_pages","Math","ceil","err","_err$response","_err$response$data","errorMessage","message","changePage","newPage","handlePostClick","post","postPath","slug","id","currentUrl","URL","window","location","href","searchParams","set","history","pushState","useEffect","_jsxs","className","children","_jsx","viewBox","fill","fillRule","d","clipRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","map","itemScope","itemType","itemProp","onClick","title","author","dateTime","created_at","updated_at","dangerouslySetInnerHTML","__html","role","e","preventDefault","rel"],"sourceRoot":""}